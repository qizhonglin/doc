应用程序中业务逻辑最常见的方法是编写 Java 代码来实现需求文档的规则和逻辑
规则引擎试图降低应用程序业务逻辑的开发和维护的困难。可以将规则引擎看作实现复杂业务逻辑的框架。大多数规则引擎允许您使用声明性编程来表达对于某些给定信息或知识有效的结果
Drools 是用 Java 语言编写的开放源码规则引擎,Drools 允许使用声明方式表达业务逻辑。可以使用非 XML 的本地语言编写规则

何时使用规则引擎？
并非所有应用程序都应使用规则引擎。如果业务逻辑代码包括很多 if-else 语句，则应考虑使用一个规则引擎。维护复杂的 Boolean 逻辑可能是非常困难的任务，而规则引擎可以帮助您组织该逻辑。当您可以使用声明方法而非命令编程语言表达逻辑时，变化引入错误的可能性会大大降低。
对客户的了解也是该决策的一个因素。在开发周期期间甚至部署之后添加和更改业务逻辑需求的倾向。